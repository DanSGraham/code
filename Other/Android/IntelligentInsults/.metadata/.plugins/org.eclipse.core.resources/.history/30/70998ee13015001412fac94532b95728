package com.example.insultstest;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Map;
import android.support.v7.app.ActionBarActivity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnLongClickListener;
import android.widget.FrameLayout;
import android.widget.TextView;


public class InsultsTest extends ActionBarActivity {
	
	//ALL PUBLICALLY ACCESSABLE ITEMS NEED TO GO HERE
	public List<String> selectedTypes, insultTypes;
	public List<String[][]> selectedCategories, insultCategories;
	
	public void initializeLists(){
			//INITIALIZE ALL ITEMS HERE!
			insultTypes = new ArrayList<String>();
			insultCategories = new ArrayList<String[][]>();
			selectedTypes = new ArrayList<String>();
			selectedCategories = new ArrayList<String[][]>();
			insultTypes.add("Noun");
			insultTypes.add("Verb");
			insultTypes.add("Phrase");
	
			String[][] shakespeare = {
					{"shakespeare"},
					{"shakespearenoun"},
					{"shakespeareverb"},
					{"shakespearephrase"}
			};
			
			String[][] english = {
					{"english"},
					{"englishnoun"},
					{"englishverb"},
					{"englishphrase"}
			};
			
			String[][] science = {
					{"science"},
					{"sciencenoun"},
					{"scienceverb"},
					{"sciencephrase"}
			};
			insultCategories.add(shakespeare);
			insultCategories.add(science);
			insultCategories.add(english);
		}
	
    public static int randInt(int min, int max){

        Random rand = new Random();

        int randomNum = rand.nextInt((max-min) +1) + min;

        return randomNum;
    }
    
    public String returnInsultType(List<String> types){
    	if (types.size() == 0){
    		return "VOID";
    	}
    	int typeInt = randInt(0, types.size() - 1);
    	return types.get(typeInt);	
    }
    	
    public String[][] returnInsultCategory(List<String[][]> category){
    	if (category.size() == 0){
    		return new String[][] {
    				{"Please Select An Insult Category!"},
    				{"Please Select An Insult Category!"},
    				{"Please Select An Insult Category!"},
    				{"Please Select An Insult Category!"}
    		};
    	}
    	int catInt = randInt(0,category.size() - 1);
    	return category.get(catInt);	
    }
    
    
    public String returnInsult(String typeIns, String[][] catIns){
    	if (typeIns.equals("Noun")){
    		int insIntN = randInt(0, catIns[1].length - 1);
    		return catIns[1][insIntN];
    	}
    	if (typeIns.equals("Verb")){
    		int insIntV = randInt(0, catIns[2].length - 1);
    		return catIns[2][insIntV];
    	}
    	if (typeIns.equals("Phrase")){
    		int insIntP = randInt(0, catIns[3].length - 1);
    		return catIns[3][insIntP];
    		}
    	else{
    		return "Please Select at least one Insult Type!";
    	}
    }
    
    public void updateSelectedLists(){
    	selectedTypes.clear();
    	selectedCategories.clear();
    	SharedPreferences allPreferences = PreferenceManager.getDefaultSharedPreferences(getBaseContext());
    	for(String type : insultTypes){
    		if (allPreferences.getBoolean(type,true)){
    			selectedTypes.add(type);
    		}
    	}
    	for (String[][] cat: insultCategories){
    		if (allPreferences.getBoolean(cat[0][0], true)){
    			selectedCategories.add(cat);
    		}
    	}
    }
    	/*  
    private String selectInsultCategory(String[] arrayOfSelected){
    	boolean whileGo = true;
    	while (whileGo){
    		int insultCategory = randInt(0,numCategories - 1);
    		switch(insultCategory){
    		case
    		}
    	}
    }
    private String selectInsultType(String[] arrayOfSelected){
    	boolean whileGo = true
    	while (whileGo){
    		int insultType = randInt(0,numTypes-1);
    		switch(insultType){
    		case 0:
    			if (Arrays.asList(arrayOfSelected).contains("Noun")){
    				int insultCat = randInt(0,numCategories - 1);
    				
    			}
    		}
    	}
    		
    }
 */   

    //private String[] insults = {"INSULT HERE"};
    public void openSettings(){
    	Intent myIntent = new Intent(InsultsTest.this, OpenPreferences.class);
    	startActivity(myIntent); 
    }
    @Override
    protected void onCreate(Bundle savedInstanceState) {
    	
    	super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_insults_test);
        TextView newInsult = (TextView)findViewById(R.id.newInsult);
        View homepage = findViewById(R.id.insultsHomepage);
        initializeLists();
        updateSelectedLists();
        String insult = returnInsult(returnInsultType(selectedTypes), returnInsultCategory(selectedCategories));
        
        /*
        boolean Nouns = allPreferences.getBoolean("nounInsults", true);
        boolean Verbs = allPreferences.getBoolean("verbInsults", true);
        boolean Phrases = allPreferences.getBoolean("phraseInsults", true);
        boolean Shakespeare = allPreferences.getBoolean("shakespeareInsults", true);
        boolean Science = allPreferences.getBoolean("scienceInsults", true);
        boolean English = allPreferences.getBoolean("englishInsults", true);
        if (Nouns){
        	insultTypes.add("Noun");
        }
        if (Verbs){
        	insultTypes.add("Verb");
        }
        if (Phrases){
        	insultTypes.add("Phrase");
        }
        for (int i = 0; i < allInsultCategories.length; i++){
        	//FIX THE FOLLOWING.
        	if (insultCategories.get(i)){
        		
        	}
        }
        if (Science){
        	insults = concatString(insults, science);
        }
        
        if (English){
        	insults = concatString(insults, english);
        }
        
        insults = concatString(insults, someInsults);
        
        int firstInsultNum = randInt(0,insults.length - 1);
        String insult = insults[firstInsultNum];
        */
        newInsult.setText(insult);
        homepage.setOnLongClickListener(new OnLongClickListener() {
            public boolean onLongClick(View arg0) {
            	//HERE WE USE Intent to start preference activity.
            	Intent myIntent = new Intent(InsultsTest.this, OpenPreferences.class);
            	startActivity(myIntent);
                return true;                         
            }
        });
            
        
    }

    @Override
    public void onResume() {
        super.onResume();  // Always call the superclass method first

        updateSelectedLists();
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.insults_test, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
    public void showInsult(View view){
         String insult = returnInsult(returnInsultType(selectedTypes), returnInsultCategory(selectedCategories));
    	 TextView newInsult = (TextView)findViewById(R.id.newInsult);
         newInsult.setText(insult);
    }
    
}
